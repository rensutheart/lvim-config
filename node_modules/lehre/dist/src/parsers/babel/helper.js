"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isCommentBlock = exports.getAst = exports.getLocation = void 0;
var parser_1 = require("@babel/parser");
var getLocation = function (node) {
    var start = node.loc ? node.loc.start : { line: 1, column: 0 };
    var end = node.loc ? node.loc.end : { line: 1, column: 0 };
    return {
        start: { line: start.line - 1, column: start.column },
        end: { line: end.line - 1, column: end.column },
    };
};
exports.getLocation = getLocation;
var getAst = function (code, parser) {
    if (parser === void 0) { parser = 'typescript'; }
    var isFlow = parser === 'js';
    var lang = isFlow ? 'flow' : 'typescript';
    var plugins = [
        lang,
        'jsx',
        'asyncGenerators',
        'classPrivateMethods',
        'classPrivateProperties',
        'classProperties',
    ];
    var parserPluginWithOptions = isFlow
        ? ['flow', { all: true }]
        : ['decorators', { decoratorsBeforeExport: true }];
    plugins.push(parserPluginWithOptions);
    return parser_1.parse(code, {
        sourceType: 'module',
        allowImportExportEverywhere: true,
        allowReturnOutsideFunction: true,
        ranges: true,
        plugins: plugins,
    });
};
exports.getAst = getAst;
var isCommentBlock = function (comments) {
    var index = comments.findIndex(function (comment) { return comment.type === 'CommentBlock'; });
    return index === -1 ? false : true;
};
exports.isCommentBlock = isCommentBlock;
