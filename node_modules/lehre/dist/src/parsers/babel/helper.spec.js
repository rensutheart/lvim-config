"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var helper_1 = require("./helper");
describe('helpers', function () {
    it('getAst', function () {
        var code = 'const foo = () => {}';
        var ast = helper_1.getAst(code);
        expect(ast.type).toBe('File');
    });
    it('getLocation', function () {
        var code = 'const foo = () => {}';
        var ast = helper_1.getAst(code);
        var _a = helper_1.getLocation(ast), start = _a.start, end = _a.end;
        expect(start).toEqual({ line: 0, column: 0 });
        expect(end).toEqual({ line: 0, column: 20 });
    });
    it('isCommentBlock with CommentBlock', function () {
        var code = "\n    /**\n     * CommentBlock.\n     */\n    const foo = (arg1: string) => {}";
        var ast = helper_1.getAst(code);
        var comments = ast.program.body[0].leadingComments || [];
        expect(helper_1.isCommentBlock(comments)).toBeTruthy();
    });
    it('isCommentBlock with CommentLine', function () {
        var code = "\n    // @flow\n    const foo = (arg1: string) => {}";
        var ast = helper_1.getAst(code);
        var comments = ast.program.body[0].leadingComments || [];
        expect(helper_1.isCommentBlock(comments)).toBeFalsy();
    });
});
