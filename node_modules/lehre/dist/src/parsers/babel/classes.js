"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getClassDoc = void 0;
var helper_1 = require("./helper");
var parameters_1 = require("./parameters");
var getClassDoc = function (node, lines) {
    var classBody = node.body;
    var methods = classBody.body.map(function (c) {
        var _a = helper_1.getLocation(c), start = _a.start, end = _a.end;
        var doc = {
            name: '',
            type: '',
            start: start,
            end: end,
            returnType: '',
            params: [],
        };
        switch (c.type) {
            case 'ClassProperty':
                doc.name = c.key.name;
                if (c.value && c.value.type === 'ArrowFunctionExpression') {
                    // method with arrow function
                    //
                    // class Foo {
                    //   method = (arg1: number): number => 1
                    // }
                    doc.type = 'function';
                    doc.params = c.value.params.map(function (param) {
                        return parameters_1.getParameter(param, lines);
                    });
                    if (c.value.returnType) {
                        doc.returnType = parameters_1.getType(c.value.returnType.typeAnnotation, lines).type;
                    }
                    break;
                }
                doc.type = 'property';
                if (c.typeAnnotation) {
                    doc.returnType = parameters_1.getType(c.typeAnnotation.typeAnnotation, lines).type;
                }
                break;
            case 'ClassMethod':
                doc.name = c.key.name;
                doc.type = 'function';
                doc.params = c.params.map(function (param) {
                    return parameters_1.getParameter(param, lines);
                });
                if (c.returnType) {
                    doc.returnType = parameters_1.getType(c.returnType.typeAnnotation, lines).type;
                }
                break;
        }
        return doc;
    });
    var _a = helper_1.getLocation(node), start = _a.start, end = _a.end;
    var impls = node.implements
        ? node.implements
        : [];
    var heritageClauses = impls.map(function (impl) { return ({
        type: 'implements',
        value: impl.expression.name,
    }); });
    if (node.superClass) {
        heritageClauses.push({
            type: 'extends',
            value: node.superClass.name,
        });
    }
    var doc = {
        name: node.id.name,
        type: 'class',
        start: start,
        end: end,
        methods: methods,
        heritageClauses: heritageClauses,
    };
    return doc;
};
exports.getClassDoc = getClassDoc;
